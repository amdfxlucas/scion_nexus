client connecting to: 19-ffaa:1:1067,192.168.2.222 : 5555
@asio|1700146171.722788|0|socket@0x6180000009c8.close
/usr/local/include/boost/asio/detail/conditionally_enabled_mutex.hpp:53:13: runtime error: load of value 128, which is not a valid value for type 'bool'
=================================================================
==4724==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0000000eb at pc 0x555555845248 bp 0x7fffffffd020 sp 0x7fffffffd010
READ of size 1 at 0x60f0000000eb thread T0
    #0 0x555555845247 in boost::asio::detail::epoll_reactor::deregister_descriptor(int, boost::asio::detail::epoll_reactor::descriptor_state*&, bool) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x2f1247)
    #1 0x555555857830 in boost::asio::detail::reactive_socket_service_base::destroy(boost::asio::detail::reactive_socket_service_base::base_implementation_type&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x303830)
    #2 0x55555589f36e in boost::asio::detail::io_object_impl<boost::asio::detail::reactive_socket_service<boost::asio::ip::udp>, boost::asio::any_io_executor>::~io_object_impl() (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x34b36e)
    #3 0x55555589b7cd in boost::asio::basic_socket<boost::asio::ip::udp, boost::asio::any_io_executor>::~basic_socket() (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x3477cd)
    #4 0x55555589679f in boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>::~basic_datagram_socket() (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x34279f)
    #5 0x555555891daa in void std::destroy_at<boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor> >(boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>*) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x33ddaa)
    #6 0x55555588a5ea in void std::_Destroy<boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor> >(boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>*) /usr/include/c++/13/bits/stl_construct.h:149
    #7 0x55555588244f in auto std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}::operator()<boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>&>(boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>&) /usr/include/c++/13/variant:471
    #8 0x555555891e86 in void std::__invoke_impl<void, std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>&>(std::__invoke_other, std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}&&, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x33de86)
    #9 0x55555588a66b in std::enable_if<is_invocable_r_v<void, std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>&>, void>::type std::__invoke_r<void, std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>&>(std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}&&, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x33666b)
    #10 0x5555558824d8 in std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<void (*)(std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}&&, std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&)>, std::integer_sequence<unsigned long, 1ul> >::__visit_invoke(std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}&&, std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x32e4d8)
uild/examples/echo/nexus_echo_client+0x33666b)
    #10 0x5555558824d8 in std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<void (*)(std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}&&, std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&)>, std::integer_sequence<unsigned long, 1ul> >::__visit_invoke(std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}&&, std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x32e4d8)
    #11 0x55555588292a in decltype(auto) std::__do_visit<void, std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}, std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&>(std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset()::{lambda(auto:1&&)#1}&&, std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x32e92a)
    #12 0x555555882bf0 in std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::_M_reset() (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x32ebf0)
    #13 0x55555590a3a7 in void std::__detail::__variant::__emplace<2ul, false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >(std::__detail::__variant::_Variant_storage<false, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor>&&) /usr/include/c++/13/variant:538
    #14 0x5555559061cd in std::enable_if<is_constructible_v<std::_Nth_type<2ul, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::type, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >, std::_Nth_type<2ul, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::type&>::type std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::emplace<2ul, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >(boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor>&&) /usr/include/c++/13/variant:1524
    #15 0x555555901bcb in std::enable_if<((__exactly_once<std::_Nth_type<__accepted_index<boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor>&&>, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::type>)&&(is_constructible_v<std::_Nth_type<__accepted_index<boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor>&&>, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::type, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >))&&(is_assignable_v<std::_Nth_type<__accepted_index<boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor>&&>, std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::type&, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >), std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >&>::type std::variant<std::monostate, boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>, boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >::operator=<boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor> >(boost::asio::basic_datagram_socket<boost::asio::local::datagram_protocol, boost::asio::any_io_executor>&&) /usr/include/c++/13/variant:1482


    #16 0x5555558ef95e in nexus::quic::detail::socket_impl::prepare_scion_client(Pan::udp::Endpoint const&, std::function<void (boost::system::error_code const&)>) /home/vagrant/nexus/src/socket.cc:150
    #17 0x5555558f07df in nexus::quic::detail::socket_impl::connect(nexus::quic::detail::connection_impl&, Pan::udp::Endpoint const&, std::basic_string_view<char, std::char_traits<char> > const&) /home/vagrant/nexus/src/socket.cc:278
    #18 0x5555558c1048 in nexus::quic::scion_client::connect(nexus::quic::connection&, Pan::udp::Endpoint const&, std::basic_string_view<char, std::char_traits<char> > const&) /home/vagrant/nexus/src/client.cc:110
    #19 0x5555558d519b in nexus::quic::connection::connection(nexus::quic::client&, Pan::udp::Endpoint const&, std::basic_string_view<char, std::char_traits<char> > const&) /home/vagrant/nexus/src/connection.cc:23
    #20 0x555555800267 in echo_connection /home/vagrant/nexus/examples/echo/client.cc:72
    #21 0x55555580518e in main /home/vagrant/nexus/examples/echo/client.cc:227
    #22 0x7ffff6a01d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58
    #23 0x7ffff6a01e3f in __libc_start_main_impl ../csu/libc-start.c:392
    #24 0x5555557ff634 in _start (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x2ab634)

0x60f0000000eb is located 3 bytes to the right of 168-byte region [0x60f000000040,0x60f0000000e8)
allocated by thread T0 here:
    #0 0x7ffff767e1e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
    #1 0x555555902b0b in boost::asio::detail::epoll_reactor::descriptor_state* boost::asio::detail::object_pool_access::create<boost::asio::detail::epoll_reactor::descriptor_state, bool>(bool) /usr/local/include/boost/asio/detail/object_pool.hpp:41
    #2 0x5555558fed50 in boost::asio::detail::epoll_reactor::descriptor_state* boost::asio::detail::object_pool<boost::asio::detail::epoll_reactor::descriptor_state>::alloc<bool>(bool) /usr/local/include/boost/asio/detail/object_pool.hpp:114
    #3 0x5555558f771c in boost::asio::detail::epoll_reactor::allocate_descriptor_state() /usr/local/include/boost/asio/detail/impl/epoll_reactor.ipp:658
    #4 0x5555558f6adb in boost::asio::detail::epoll_reactor::register_descriptor(int, boost::asio::detail::epoll_reactor::descriptor_state*&) /usr/local/include/boost/asio/detail/impl/epoll_reactor.ipp:155
    #5 0x5555558f8cba in boost::asio::detail::reactive_socket_service_base::do_open(boost::asio::detail::reactive_socket_service_base::base_implementation_type&, int, int, int, boost::system::error_code&) /usr/local/include/boost/asio/detail/impl/reactive_socket_service_base.ipp:188
    #6 0x555555909995 in boost::asio::detail::reactive_socket_service<boost::asio::ip::udp>::open(boost::asio::detail::reactive_socket_service<boost::asio::ip::udp>::implementation_type&, boost::asio::ip::udp const&, boost::system::error_code&) /usr/local/include/boost/asio/detail/reactive_socket_service.hpp:129
    #7 0x5555559055c4 in boost::asio::basic_socket<boost::asio::ip::udp, boost::asio::any_io_executor>::basic_socket(boost::asio::any_io_executor const&, boost::asio::ip::udp const&) /usr/local/include/boost/asio/basic_socket.hpp:160
    #8 0x5555559013bc in boost::asio::basic_datagram_socket<boost::asio::ip::udp, boost::asio::any_io_executor>::basic_datagram_socket(boost::asio::any_io_executor const&, boost::asio::ip::udp const&) /usr/local/include/boost/asio/basic_datagram_socket.hpp:136


    #9 0x5555558ee798 in bind_socket /home/vagrant/nexus/src/socket.cc:50
    #10 0x5555558ef170 in nexus::quic::detail::socket_impl::socket_impl(nexus::quic::detail::engine_impl&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp> const&, bool, boost::asio::ssl::context&) /home/vagrant/nexus/src/socket.cc:105
    #11 0x5555558c08d3 in nexus::quic::client::client(boost::asio::any_io_executor const&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp> const&, boost::asio::ssl::context&) /home/vagrant/nexus/src/client.cc:30
    #12 0x5555558c107f in nexus::quic::scion_client::scion_client(boost::asio::any_io_executor const&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp> const&, boost::asio::ssl::context&) /home/vagrant/nexus/src/client.cc:117
    #13 0x5555558a46fb in void std::_Construct<nexus::quic::scion_client, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>, boost::asio::ssl::context&>(nexus::quic::scion_client*, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>&&, boost::asio::ssl::context&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x3506fb)
    #14 0x55555589ad97 in std::_Sp_counted_ptr_inplace<nexus::quic::scion_client, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>, boost::asio::ssl::context&>(std::allocator<void>, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>&&, boost::asio::ssl::context&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x346d97)
    #15 0x555555895287 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<nexus::quic::scion_client, std::allocator<void>, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>, boost::asio::ssl::context&>(nexus::quic::scion_client*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>&&, boost::asio::ssl::context&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x341287)
    #16 0x55555588ef8b in std::__shared_ptr<nexus::quic::scion_client, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>, boost::asio::ssl::context&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>&&, boost::asio::ssl::context&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x33af8b)
    #17 0x5555558853ad in std::shared_ptr<nexus::quic::scion_client>::shared_ptr<std::allocator<void>, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>, boost::asio::ssl::context&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>&&, boost::asio::ssl::context&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x3313ad)
    #18 0x555555876dbd in std::shared_ptr<nexus::quic::scion_client> std::make_shared<nexus::quic::scion_client, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>, boost::asio::ssl::context&>(boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>&, boost::asio::ip::basic_endpoint<boost::asio::ip::udp>&&, boost::asio::ssl::context&) (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x322dbd)
    #19 0x555555804ff0 in main /home/vagrant/nexus/examples/echo/client.cc:224
    #20 0x7ffff6a01d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58

SUMMARY: AddressSanitizer: heap-buffer-overflow (/home/vagrant/nexus/build/examples/echo/nexus_echo_client+0x2f1247) in boost::asio::detail::epoll_reactor::deregister_descriptor(int, boost::asio::detail::epoll_reactor::descriptor_state*&, bool)
Shadow bytes around the buggy address:

 0x0c1e7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
=>0x0c1e7fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa
  0x0c1e7fff8020: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff8030: 00 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa
  0x0c1e7fff8040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff8050: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa
  0x0c1e7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==4724==ABORTING
[1] + Done                       "/usr/bin/gdb" --interpreter=mi --tty=${DbgTerm} 0<"/tmp/Microsoft-MIEngine-In-t3vlojyi.ull" 1>"/tmp/Microsoft-MIEngine-Out-eb2kn2g1.zu5"
